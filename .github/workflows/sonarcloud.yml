name: Sonarcloud Analysis
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      # - name: Set up JDK 11
      #   uses: actions/setup-java@v1
      #   with:
      #     java-version: 1.11
      # - name: Cache SonarCloud packages
      #   uses: actions/cache@v1
      #   with:
      #     path: ~\sonar\cache
      #     key: ${{ runner.os }}-sonar
      #     restore-keys: ${{ runner.os }}-sonar
      # - name: Cache SonarCloud scanner
      #   id: cache-sonar-scanner
      #   uses: actions/cache@v1
      #   with:
      #     path: .\.sonar\scanner
      #     key: ${{ runner.os }}-sonar-scanner
      #     restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube tool
        run: dotnet tool update dotnet-sonarscanner --global

      - name: Begin SonarQube Scanner
        run: dotnet sonarscanner begin /k:"nikneem_email" /s:${{ env.GITHUB_WORKSPACE }}/SonarQube.Analysis.xml" /d:sonar.login=${{ secrets.SONAR_TOKEN }} /o:nikneem

      - name: Buid Release
        run: dotnet build src/Email.sln -c Release

      - name: Execute unit tests
        run: dotnet test src/Email.sln --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx

      - name: End SonarQube scanner and publish results
        run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
      # - name: Install SonarCloud scanner
      #   if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      #   shell: powershell
      #   run: |
      #     New-Item -Path .\.sonar\scanner -ItemType Directory
      #     dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      # - name: Build and analyze
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   shell: powershell
      #   run: |
      #     .\.sonar\scanner\dotnet-sonarscanner begin /k:"nikneem_email" /o:"nikneem" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /s:sonar.host.url="https://sonarcloud.io"
      #     dotnet build src/Email.sln -c Release
      #     dotnet test src/Email.sln --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx
      #     .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
